#!/bin/bash
# ****************************************************************************** #
#                                                                                #
#                                                         :::      ::::::::      #
#    env.cfg                                            :+:      :+:    :+:      #
#                                                     +:+ +:+         +:+        #
#    By: thenizix <thenizix@protonmail.com>         +#+  +:+       +#+           #
#                                                 +#+#+#+#+#+   +#+              #
#    Created: 2024/06/01 15:00:00 by thenizix          #+#    #+#                #
#    Updated: 2024/06/01 15:00:00 by thenizix         ###   ########.fr          #
#                                                                                #
# ****************************************************************************** #

# ============================================================================== #
# CONFIGURAZIONE AMBIENTE
# ============================================================================== #

# Modalità operativa (local/prod) - DEVE ESSERE DEFINITA
ENV_MODE="local"

# Debug WordPress (true/false)
WP_DEBUG="true"

# ============================================================================== #
# DEBUG INTEGRATO - VERIFICA FILE TEMPLATE
# ============================================================================== #

debug_templates() {
    local template_dir="$(dirname "${BASH_SOURCE[0]}")/../templates"
    echo -e "\n\033[1;36m=== DEBUG TEMPLATE ===\033[0m"
    echo -e "Directory templates: \033[0;33m${template_dir}\033[0m"
    
    if [ ! -d "$template_dir" ]; then
        echo -e "\033[0;31m❌ Directory templates non trovata!\033[0m"
        return 1
    fi

    echo -e "\nFile presenti:"
    ls -la "$template_dir" || {
        echo -e "\033[0;31m❌ Errore nel listare i template\033[0m"
        return 1
    }

    local expected_files=("nginx-local.conf" "nginx-prod.conf")
    for file in "${expected_files[@]}"; do
        if [ ! -f "${template_dir}/${file}" ]; then
            echo -e "\033[0;31m❌ File mancante: ${file}\033[0m"
            return 1
        else
            echo -e "\033[0;32m✔ Trovato: ${file}\033[0m"
        fi
    done

    echo -e "\nContenuto di wp_installer.cfg:"
    grep -E 'ENV_MODE|DOMAIN|SERVER_PORT' "$(dirname "${BASH_SOURCE[0]}")/wp_installer.cfg" || {
        echo -e "\033[0;31m❌ Errore nella lettura della configurazione\033[0m"
        return 1
    }
}

# ============================================================================== #
# CONFIGURAZIONE SSL AUTOMATICA
# ============================================================================== #

configure_ssl_type() {
    # Carica configurazione principale
    source "$(dirname "${BASH_SOURCE[0]}")/wp_installer.cfg" 2>/dev/null || {
        echo -e "\033[0;31m❌ File wp_installer.cfg mancante o errato!\033[0m" >&2
        exit 1
    }

    # Configurazione automatica SSL
    if [ "$ENV_MODE" = "prod" ]; then
        SSL_TYPE="letsencrypt"
    else
        SSL_TYPE="selfsigned"
    fi

    export SSL_TYPE ENV_MODE
}

# Esegui debug e configurazione
debug_templates
configure_ssl_type